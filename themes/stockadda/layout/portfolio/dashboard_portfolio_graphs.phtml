<script>

    function add_lineChart(dates_obj, type_dates_obj){
       console.log('Before');
       console.log(dates_obj);
       date_time_stamps = Object.keys(dates_obj).sort();
       var color_dict = new Object();
       var dates_array_to_send = new Array();
       var skip_end = false;

       color_dict[date_time_stamps[0]] = (dates_obj[date_time_stamps[0]] > 0) ? "green" : "red";

       for (tracking_point = 1; tracking_point < date_time_stamps.length; tracking_point++){
           color_dict[date_time_stamps[tracking_point]] = (dates_obj[date_time_stamps[tracking_point]] > 0) ? "green" : "red";
           dates_obj[date_time_stamps[tracking_point]] += dates_obj[date_time_stamps[tracking_point - 1]];
       };


       var current_date = parseInt(new Date().getTime()/1000);
       if (date_time_stamps[date_time_stamps.length - 1] != (current_date)) {
           skip_end = true;
           dates_obj[current_date] = dates_obj[date_time_stamps[date_time_stamps.length - 1]];
           color_dict[current_date] = 'gray';
           date_time_stamps.push(current_date);
       }

       var least_val = undefined;
       var max_val = undefined;
       date_time_stamps.forEach(function (date_time){
           /* date_array_to_send = [parseInt(date_time) * 1000, dates_obj[date_time]]; */
           date_array_to_send = {x: parseInt(date_time) * 1000, y: dates_obj[date_time], color: color_dict[date_time]};
           dates_array_to_send.push(date_array_to_send);
           if ((dates_obj[date_time] < least_val) || least_val == undefined) least_val = dates_obj[date_time];
           if ((dates_obj[date_time] > max_val) || max_val == undefined) max_val = dates_obj[date_time];
       });


       console.log('After');
       console.log(dates_obj);
       console.log(color_dict);
       console.log(type_dates_obj);
       ctx = document.querySelector("#asset_line_graph_SA");
       if (ctx) assetLineGraph(ctx, dates_array_to_send, least_val, max_val, date_time_stamps[0], type_dates_obj, skip_end, current_date);
    };

    function add_doughnutCharts_Portfolio(currentVal_array){
        /* ctx = document.getElementById("invested_val_allocation_SA"); */
        ctx = document.querySelector("#invested_val_allocation_SA");
        if (ctx) invested_value_allocation(ctx);
        /* var ctx = document.getElementById("current_val_allocation_SA"); */
        ctx = document.querySelector("#current_val_allocation_SA");
        if (ctx) current_value_allocation(ctx, currentVal_array);
    };

    function add_doughnutCharts_Overview(total_profit_overall, total_loss_overall, total_profit_days, total_loss_days){
        ctx = document.getElementById("Days_PL");
        if (ctx) days_p_l(ctx, total_profit_days, total_loss_days);
        var ctx = document.getElementById("Overall_PL");
        if (ctx) overall_p_l(ctx, total_profit_overall, total_loss_overall);
    };

    function add_weightage_Overview(fincode_stock_weightage_current, fincode_sector_weightage_current, fincode_stock_weightage_invested, fincode_sector_weightage_invested, fincode_sector_weightage_profit, fincode_sector_weightage_profit_per){
        ctx_invested = document.getElementById("overview_stock_weightage_invested");
        ctx_current = document.getElementById("overview_stock_weightage_current");
        if (ctx_invested) stockWeightageInvested(ctx_invested, fincode_stock_weightage_invested);
        if (ctx_current) stockWeightageCurrent(ctx_current, fincode_stock_weightage_current);

        ctx_profit_per = document.getElementById("overview_sector_weightage_profit_per");
        if (ctx_profit_per) sectorWeightageProfitPer(ctx_profit_per, fincode_sector_weightage_profit, fincode_sector_weightage_profit_per);
        ctx_invested_current = document.getElementById("overview_sector_weightage_invested_current");
        if (ctx_invested_current) sectorWeightageInvestedCurrent(ctx_invested_current, fincode_sector_weightage_invested, fincode_sector_weightage_current);
    };

    function add_marketCap_Overview(fincode_mcap_weightage_invested, fincode_mcap_weightage_current){
        ctx_invested = document.getElementById("overview_mcap_weightage_invested");
        if (ctx_invested) mcapWeightageInvested(ctx_invested, fincode_mcap_weightage_invested);

        ctx_current = document.getElementById("overview_mcap_weightage_current");
        if (ctx_current) mcapWeightageCurrent(ctx_current, fincode_mcap_weightage_current);
    };

    function add_Overview_stock_transactionChart(transaction_obj, date_compname_type){
        ctx = document.querySelector("#overview_transactions");
        if (ctx) transaction_stocks(ctx, transaction_obj, date_compname_type);
    };

    function format_rupees(val){
        val = Math.round(val).toString();
        if (val.length > 3 && val.length < 6) val = parseFloat(Math.round(parseInt(val) / 10)/100).toString() + 'K';
        else if (val.length > 5 && val.length < 8) val = parseFloat(Math.round(parseInt(val) / 1000)/100).toString() + 'L';
        else if (val.length > 7) val = parseFloat(Math.round(parseInt(val) / 1000)/100).toString() + 'Cr';
        return 'â‚¹' + val;
    }

</script>
