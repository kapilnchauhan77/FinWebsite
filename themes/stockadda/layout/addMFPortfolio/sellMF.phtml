<script>
    async function sellMutualFund(name_, uid){
        qty_available = parseFloat($('#'+ uid +'_qty').text());
        const { value: formValues } = await Swal.fire({
            title: 'Sell ' + name_ + ' (Available Qty: '+ qty_available +')',
            showCancelButton: true,
            cancelButtonColor: 'red',
            showCloseButton: true,
            width: 'auto',
            html:
               `<table class="table table-hover table-striped">

                   <thead>
                       <tr>
                           <th style="text-align: center;">Selling Date</th>
                           <th style="text-align: center;">Selling NAV</th>
                           <th style="text-align: center;">Quantity</th>
                       </tr>
                   </thead>

                   <tbody id="table_stock_quote_search_body">
                        <tr id=`+ uid +` style="height:39px">
                            <td><input id="stock_transaction_date" type="date" name="transaction_date"/></td>
                            <td>
                                <span class="stock_quote_transac_price_div">
                                    <input id="stock_transaction_price" type="number" min="0" value="0.00" step="any" class="stock_quote_transac_price" name="transaction_price" style="height:39px;" onkeyup=changeValue_Selling(`+ uid +`) onchange=changeValue_Selling(`+ uid +`) />
                                </span>
                            </td>
                            <td><input id="stock_qty" type="number" min="0" value="0" step="1" class="stock_quote_transac_price" name="quantity" style="height:39px;" onkeyup=changeValue_Selling(`+ uid +`) onchange=changeValue_Selling(`+ uid +`) /></td>
                        </tr>
                        <tr id=`+ uid +`stock_notes style="height:39px">
                            <td colspan="7"> <span class="small">Notes:</span> <br> <span> <textarea name="notes" id="`+ uid +`notes" rows="1"></textarea> </span> </textarea></td>
                        </tr>
                   </tbody>
               </table>`,

            focusConfirm: false,
            preConfirm: () => {
                stock_transaction_qty = parseFloat(document.getElementById("stock_qty").value);
                stock_transaction_date = parseInt(new Date(document.getElementById("stock_transaction_date").value).getTime()/1000);
                stock_transaction_price = parseFloat(document.getElementById('stock_transaction_price').value);
                if (!stock_transaction_date) return "Please Enter Selling Date!";
                if (stock_transaction_date > parseInt(new Date().getTime())/1000) return "You Cannot Sell On a Future Date!";
                if (stock_transaction_price < 0) return "Mutual Fund NAV Cannot Be Less Than 0!";
                if (qty_available < stock_transaction_qty) return "You Cannot Sell More Than Quantity Held";
                var [invested_equivalent, time_stamp_sold] = getInvestedPriceEquivalent(uid, stock_transaction_qty, stock_transaction_date, 'mutual funds');
                if (invested_equivalent == false && time_stamp_sold == false) return 'You do not have enough stocks on the selling date!';

                data_to_send = {
                    scheme_code: uid,
                    mf_transaction_date: stock_transaction_date,
                    mf_transaction_price: stock_transaction_price,
                    mf_transaction_qty: -1 * stock_transaction_qty,
                    note: document.getElementById(uid + "notes").value,
                    mf_net_amount: -1 * invested_equivalent,
                    timestamp_sold: time_stamp_sold,
                    realized_gain: ((stock_transaction_price * stock_transaction_qty) - invested_equivalent),
                };
                console.log(time_stamp_sold)
                console.log(data_to_send)


                $.ajax({
                    url: Wo_Ajax_Requests_File(),
                    type: 'GET',
                    dataType: 'json',
                    data: {
                        f:'add_mutual_funds',
                        mf_array: data_to_send,
                        mf_available: parseInt(qty_available),
                        portfolio_id: <?php echo $wo['portfolio_data']['portfolio_id']; ?>,
                        auto_add: '2',
                    },
                    success: function(data) {
                        if (data['status'] == 200){
                            Swal.fire({
                                icon: 'success',
                                title: 'Mutual Funds Sold Successfully!',
                                showConfirmButton: false,
                                timer: 1250,
                                timerProgressBar: true,
                            }).then((result) => {
                                localStorage.removeItem(<?php echo $wo['portfolio_data']['portfolio_id']; ?> + "_portfolio_assets");
                                if ((<?php echo $wo ['portfolio_data']['no_of_stocks']; ?> - stock_transaction_qty) == 0) location.href = '<?php echo $wo['portfolio_data']['portfolio_url']; ?>';
                                else location.href = '<?php echo $wo['portfolio_data']['portfolio_url']; ?>&tab=overview&content=mutual_funds';
                            })
                        }
                        else if (data['status'] == 401){
                            console.log(data);
                            Swal.fire({
                                icon: 'error',
                                title: data['error'],
                            })
                        }
                        else{
                            console.log(data);
                            Swal.fire({
                                icon: 'error',
                                title: data['error'],
                            })
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        alert("AJAX call failed: " + textStatus + ", " + errorThrown);
                    }
                });
                return false;
            }
        })

        if (formValues) Swal.fire({icon: 'error', title: formValues});
        /* if (formValues) Swal.fire({icon: 'error', title: JSON.stringify(formValues)}); */
    }
</script>
